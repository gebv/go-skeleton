syntax = "proto3";

package yourapp_api;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
// import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;

service Users {
    // SignIn authorization of the registered user.
    rpc SignIn(SignInRequest) returns (SignInResponse) {
    }

    // SignUp registration new user.
    rpc SignUp(SignUpRequest) returns (SignUpResponse) {
    }

    // Profile returns profile if session is authorized.
    rpc Profile(ProfileRequest) returns (ProfileResponse) {
    }
}

message SignInRequest {
    string email = 1 [(validator.field) = {string_not_empty: true}];
    string password = 2 [(validator.field) = {string_not_empty: true}];
}
message SignInResponse {
    string session_id = 1;
}

message SignUpRequest {
    string email = 1 [(validator.field) = {string_not_empty: true}];
    string password = 2 [(validator.field) = {string_not_empty: true}];
}
message SignUpResponse {
    string session_id = 1;
}

message ProfileRequest {}
message ProfileResponse {
    string email = 1;
    google.protobuf.Timestamp last_login_at = 2 [(gogoproto.stdtime) = true];
}
